{"version":3,"sources":["Util.js","Plot.js","Components.js","Modal.js","App.js","index.js"],"names":["Zip","rows","map","_","c","row","COLORS","ToHumanReadableBytes","valarg","tickDecimals","divider","undefined","val","Math","abs","sign","suffix","suffixes","x","prefix","i","toFixed","length","SelectAxesTicks","range","max","diff","tick","CalcStepSize","minTick","ceil","ticks","push","targetSteps","tempStep","mag","floor","log","LN10","magPow","pow","magMsd","round","Plot","BaseViewBox","PolyLines","Curves","SpPaths","Texts","Dots","ViewBox","NYRange","NXRange","Axes","points","attr","stroke","strokeWidth","LastInstances","xrange","yrange","xrangeInProp","yrangeInProp","this","props","series","ele","data","filter","e","forEach","xvals","yvals","min","slice","yTickFunc","xTickFunc","tickClass","xTickClass","yTickClass","xGridLines","xTickLines","xTexts","yViewBox","xticks","ystart","yend","nx","y","textAnchor","className","xLabel","yGridLines","yTickLines","yTexts","xViewBox","yticks","xstart","xend","ny","yLabel","transform","concat","curves","dots","SelectRanges","SetupTicksAndGrids","npoints","pt","cx","cy","r","fill","color","spline","xs","ys","result","indexes","sort","a","b","oldXs","oldYs","dys","dxs","ms","dx","dy","c1s","m","mNext","dx_","dxNext","common","c2s","c3s","c1","m_","invDx","common_","mid","low","high","xHere","diffSq","CreateInterpolant","curve","PreparePlots","clip","width","height","lid","viewBox","join","id","pth","path","cpt","key","d","txt","line","cPathId","clipPath","p","crv","Component","Server","FetchTimer","IntervalExpiredFor","MaxDisplayTime","PlotData","time","thr","bytes","ColorInputElements","ContainerCss","margin","border","padding","float","BlockViewCss","display","LegendBoxCss","IfcContCss","marginLeft","RxTxBytesHolderCss","fontFamily","state","play","plotDot","pltData","ifcs","checked","setState","playAll","setInterval","OnTick","clearTimeout","prevProps","prevState","snapshot","tmpState","updated","fetch","server","then","json","RecvData","res","lastTime","curTime","lastBytes","curBytes","curThr","ifc","rxThr","txThr","newThr","datas","Object","keys","colors","nextColor","onColorUpdate","click","rxData","txData","xrangeMin","xrangeMinTime","usableDt","td","rx","tx","tm","style","type","readOnly","onClick","OnToggleChecked","OnColorClicked","background","onChange","currentTarget","value","ref","input","visibility","data-clr-query","data-clr-ifc","playBtnVal","cursor","onInfoClick","onClose","name","verticalAlign","writingMode","RenderPlot","textAlign","colSpan","RenderIfc","defaultProps","displayTime","Modal","closeButton","open","RenderCloseButton","children","ConfirmModal","colspan","align","backgroundColor","onNo","onYes","ModalFormInput","label","defaultValue","ModalForm","onSubmit","App","ImportElement","Widths","addNewServerModal","editServerIndexModal","deleteServerIndexModal","importConfigModal","removeAllServersModal","serverStates","restoreServerStateFromLocalStorage","curServer","s","Storage","localStorage","JSON","parse","stringify","storeServerStateToLocalStorage","event","target","reader","FileReader","onload","text","jsonData","readAsText","files","preventDefault","frmData","FormData","get","startsWith","Date","getTime","addServer","alert","updateServer","index","handleNewServerSubmitted","handleEditServerSubmitted","v","handleUpdateColor","splineBtnVal","magChar","role","aria-label","renderNewServerModal","renderServerInfoModal","renderConfigLoadModal","renderDeleteServerModal","renderRemoveAllServerModal","title","disabled","tr","options","selectedIndex","download","href","encodeURIComponent","clear","renderServer","accept","handleLoadConfig","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6637a36.chunk.js","sourcesContent":["\nexport const Zip = rows => rows[0].map((_, c) => rows.map(row => row[c]))\n\n\nexport const COLOR_NAMES = {\n    \"aliceblue\": \"#f0f8ff\", \"antiquewhite\": \"#faebd7\", \"aqua\": \"#00ffff\", \"aquamarine\": \"#7fffd4\",\n    \"azure\": \"#f0ffff\", \"beige\": \"#f5f5dc\", \"bisque\": \"#ffe4c4\", \"black\": \"#000000\", \"blanchedalmond\": \"#ffebcd\",\n    \"blue\": \"#0000ff\", \"blueviolet\": \"#8a2be2\", \"brown\": \"#a52a2a\", \"burlywood\": \"#deb887\", \"cadetblue\": \"#5f9ea0\",\n    \"chartreuse\": \"#7fff00\", \"chocolate\": \"#d2691e\", \"coral\": \"#ff7f50\", \"cornflowerblue\": \"#6495ed\",\n    \"cornsilk\": \"#fff8dc\", \"crimson\": \"#dc143c\", \"cyan\": \"#00ffff\", \"darkblue\": \"#00008b\", \"darkcyan\": \"#008b8b\",\n    \"darkgoldenrod\": \"#b8860b\", \"darkgray\": \"#a9a9a9\", \"darkgreen\": \"#006400\", \"darkkhaki\": \"#bdb76b\",\n    \"darkmagenta\": \"#8b008b\", \"darkolivegreen\": \"#556b2f\", \"darkorange\": \"#ff8c00\", \"darkorchid\": \"#9932cc\",\n    \"darkred\": \"#8b0000\", \"darksalmon\": \"#e9967a\", \"darkseagreen\": \"#8fbc8f\", \"darkslateblue\": \"#483d8b\",\n    \"darkslategray\": \"#2f4f4f\", \"darkturquoise\": \"#00ced1\", \"darkviolet\": \"#9400d3\", \"deeppink\": \"#ff1493\",\n    \"deepskyblue\": \"#00bfff\", \"dimgray\": \"#696969\", \"dodgerblue\": \"#1e90ff\", \"firebrick\": \"#b22222\",\n    \"floralwhite\": \"#fffaf0\", \"forestgreen\": \"#228b22\", \"fuchsia\": \"#ff00ff\", \"gainsboro\": \"#dcdcdc\",\n    \"ghostwhite\": \"#f8f8ff\", \"gold\": \"#ffd700\", \"goldenrod\": \"#daa520\", \"gray\": \"#808080\", \"green\": \"#008000\",\n    \"greenyellow\": \"#adff2f\", \"honeydew\": \"#f0fff0\", \"hotpink\": \"#ff69b4\", \"indianred \": \"#cd5c5c\", \"indigo\": \"#4b0082\",\n    \"ivory\": \"#fffff0\", \"khaki\": \"#f0e68c\", \"lavender\": \"#e6e6fa\", \"lavenderblush\": \"#fff0f5\", \"lawngreen\": \"#7cfc00\",\n    \"lemonchiffon\": \"#fffacd\", \"lightblue\": \"#add8e6\", \"lightcoral\": \"#f08080\", \"lightcyan\": \"#e0ffff\",\n    \"lightgoldenrodyellow\": \"#fafad2\", \"lightgrey\": \"#d3d3d3\", \"lightgreen\": \"#90ee90\", \"lightpink\": \"#ffb6c1\",\n    \"lightsalmon\": \"#ffa07a\", \"lightseagreen\": \"#20b2aa\", \"lightskyblue\": \"#87cefa\", \"lightslategray\": \"#778899\",\n    \"lightsteelblue\": \"#b0c4de\", \"lightyellow\": \"#ffffe0\", \"lime\": \"#00ff00\", \"limegreen\": \"#32cd32\", \"linen\": \"#faf0e6\",\n    \"magenta\": \"#ff00ff\", \"maroon\": \"#800000\", \"mediumaquamarine\": \"#66cdaa\", \"mediumblue\": \"#0000cd\",\n    \"mediumorchid\": \"#ba55d3\", \"mediumpurple\": \"#9370d8\", \"mediumseagreen\": \"#3cb371\", \"mediumslateblue\": \"#7b68ee\",\n    \"mediumspringgreen\": \"#00fa9a\", \"mediumturquoise\": \"#48d1cc\", \"mediumvioletred\": \"#c71585\", \"midnightblue\": \"#191970\",\n    \"mintcream\": \"#f5fffa\", \"mistyrose\": \"#ffe4e1\", \"moccasin\": \"#ffe4b5\", \"navajowhite\": \"#ffdead\", \"navy\": \"#000080\",\n    \"oldlace\": \"#fdf5e6\", \"olive\": \"#808000\", \"olivedrab\": \"#6b8e23\", \"orange\": \"#ffa500\", \"orangered\": \"#ff4500\",\n    \"orchid\": \"#da70d6\", \"palegoldenrod\": \"#eee8aa\", \"palegreen\": \"#98fb98\", \"paleturquoise\": \"#afeeee\",\n    \"palevioletred\": \"#d87093\", \"papayawhip\": \"#ffefd5\", \"peachpuff\": \"#ffdab9\", \"peru\": \"#cd853f\", \"pink\": \"#ffc0cb\",\n    \"plum\": \"#dda0dd\", \"powderblue\": \"#b0e0e6\", \"purple\": \"#800080\", \"rebeccapurple\": \"#663399\", \"red\": \"#ff0000\",\n    \"rosybrown\": \"#bc8f8f\", \"royalblue\": \"#4169e1\", \"saddlebrown\": \"#8b4513\", \"salmon\": \"#fa8072\", \"sandybrown\": \"#f4a460\",\n    \"seagreen\": \"#2e8b57\", \"seashell\": \"#fff5ee\", \"sienna\": \"#a0522d\", \"silver\": \"#c0c0c0\", \"skyblue\": \"#87ceeb\",\n    \"slateblue\": \"#6a5acd\", \"slategray\": \"#708090\", \"snow\": \"#fffafa\", \"springgreen\": \"#00ff7f\", \"steelblue\": \"#4682b4\",\n    \"tan\": \"#d2b48c\", \"teal\": \"#008080\", \"thistle\": \"#d8bfd8\", \"tomato\": \"#ff6347\", \"turquoise\": \"#40e0d0\", \"violet\": \"#ee82ee\",\n    \"wheat\": \"#f5deb3\", \"white\": \"#ffffff\", \"whitesmoke\": \"#f5f5f5\", \"yellow\": \"#ffff00\", \"yellowgreen\": \"#9acd32\"\n  };\n  \n export const COLORS = [\n    COLOR_NAMES[\"aqua\"], COLOR_NAMES[\"black\"], COLOR_NAMES[\"blue\"], COLOR_NAMES[\"fuchsia\"],\n    COLOR_NAMES[\"gray\"], COLOR_NAMES[\"green\"], COLOR_NAMES[\"lime\"], COLOR_NAMES[\"maroon\"],\n    COLOR_NAMES[\"navy\"], COLOR_NAMES[\"olive\"], COLOR_NAMES[\"purple\"], COLOR_NAMES[\"red\"],\n    COLOR_NAMES[\"silver\"], COLOR_NAMES[\"teal\"], COLOR_NAMES[\"white\"], COLOR_NAMES[\"yellow\"],\n  ]\n  \nexport function ToHumanReadableBytes(valarg, tickDecimals, divider) {\n    if (tickDecimals === undefined)\n      tickDecimals = 3\n    if (divider === undefined || divider <= 0)\n      divider = 1000\n    var val = Math.abs(valarg)\n    var sign = \" \"\n    if (valarg < 0)\n      sign = \"-\"\n    var suffix = \" \"\n    var suffixes = [\" \", \"K\", \"M\", \"G\", \"T\"]\n    for (var x in suffixes) {\n      suffix = suffixes[x]\n      if (val < divider)\n        break\n      val = val / divider\n    }\n    var prefix = \"\"\n    val = val.toFixed(tickDecimals)\n    for (var i = val.length; i < (4 + tickDecimals); i++) {\n      prefix += \" \"\n    }\n    return prefix + sign + val + suffix\n  }\n  \nexport const CreateInterpolant = function(xs, ys) {\n\tvar i, length = xs.length;\n\t\n\t// Deal with length issues\n\tif (length !== ys.length) { throw 'Need an equal count of xs and ys.'; }\n\tif (length === 0) { return function(x) { return 0; }; }\n\tif (length === 1) {\n\t\t// Impl: Precomputing the result prevents problems if ys is mutated later and allows garbage collection of ys\n\t\t// Impl: Unary plus properly converts values to numbers\n\t\tvar result = +ys[0];\n\t\treturn function(x) { return result; };\n\t}\n\t\n\t// Rearrange xs and ys so that xs is sorted\n\tvar indexes = [];\n\tfor (i = 0; i < length; i++) { indexes.push(i); }\n\tindexes.sort(function(a, b) { return xs[a] < xs[b] ? -1 : 1; });\n\tvar oldXs = xs, oldYs = ys;\n\t// Impl: Creating new arrays also prevents problems if the input arrays are mutated later\n\txs = []; ys = [];\n\t// Impl: Unary plus properly converts values to numbers\n\tfor (i = 0; i < length; i++) { xs.push(+oldXs[indexes[i]]); ys.push(+oldYs[indexes[i]]); }\n\t\n\t// Get consecutive differences and slopes\n\tvar dys = [], dxs = [], ms = [];\n\tfor (i = 0; i < length - 1; i++) {\n\t\tvar dx = xs[i + 1] - xs[i], dy = ys[i + 1] - ys[i];\n\t\tdxs.push(dx); dys.push(dy); ms.push(dy/dx);\n\t}\n\t\n\t// Get degree-1 coefficients\n\tvar c1s = [ms[0]];\n\tfor (i = 0; i < dxs.length - 1; i++) {\n\t\tvar m = ms[i], mNext = ms[i + 1];\n\t\tif (m*mNext <= 0) {\n\t\t\tc1s.push(0);\n\t\t} else {\n\t\t\tvar dx_ = dxs[i], dxNext = dxs[i + 1], common = dx_ + dxNext;\n\t\t\tc1s.push(3*common/((common + dxNext)/m + (common + dx_)/mNext));\n\t\t}\n\t}\n\tc1s.push(ms[ms.length - 1]);\n\t\n\t// Get degree-2 and degree-3 coefficients\n\tvar c2s = [], c3s = [];\n\tfor (i = 0; i < c1s.length - 1; i++) {\n\t\tvar c1 = c1s[i], m_ = ms[i], invDx = 1/dxs[i], common_ = c1 + c1s[i + 1] - m_ - m_;\n\t\tc2s.push((m_ - c1 - common_)*invDx); c3s.push(common_*invDx*invDx);\n\t}\n\t\n\t// Return interpolant function\n\treturn function(x) {\n\t\t// The rightmost point in the dataset should give an exact result\n\t\tvar i = xs.length - 1;\n\t\tif (x === xs[i]) { return ys[i]; }\n\t\t\n\t\t// Search for the interval x is in, returning the corresponding y if x is one of the original xs\n\t\tvar low = 0, mid, high = c3s.length - 1;\n\t\twhile (low <= high) {\n\t\t\tmid = Math.floor(0.5*(low + high));\n\t\t\tvar xHere = xs[mid];\n\t\t\tif (xHere < x) { low = mid + 1; }\n\t\t\telse if (xHere > x) { high = mid - 1; }\n\t\t\telse { return ys[mid]; }\n\t\t}\n\t\ti = Math.max(0, high);\n\t\t\n\t\t// Interpolate\n\t\tvar diff = x - xs[i], diffSq = diff*diff;\n\t\treturn ys[i] + c1s[i]*diff + c2s[i]*diffSq + c3s[i]*diff*diffSq;\n\t};\n};","import React, { Component } from 'react';\nimport { Zip, CreateInterpolant } from \"./Util.js\"\n// import Spline  from \"cubic-spline\"\n\n\nfunction SelectAxesTicks(range, max = 4) {\n    var diff = range[1] - range[0]\n    var tick = CalcStepSize(diff, max) //Math.ceil(diff/(max))\n    var minTick = Math.ceil(tick * Math.ceil(range[0] / tick))\n    var ticks = [minTick]\n    while (minTick < range[1]) {\n        minTick += tick\n        ticks.push(minTick)\n    }\n    return ticks;\n}\n\nconst CalcStepSize = function (range, targetSteps) {\n    // calculate an initial guess at step size\n    var tempStep = range / targetSteps;\n\n    // get the magnitude of the step size\n    var mag = Math.floor(Math.log(tempStep) / Math.LN10);\n    var magPow = Math.pow(10, mag);\n\n    // calculate most significant digit of the new step size\n    var magMsd = Math.round(tempStep / magPow + 0.5);\n\n    // promote the MSD to either 1, 2, or 5\n    if (magMsd > 5.0)\n        magMsd = 10.0;\n    else if (magMsd > 2.0)\n        magMsd = 5.0;\n    else if (magMsd > 1.0)\n        magMsd = 2.0;\n\n    return magMsd * magPow;\n};\n\nclass Plot extends Component {\n    BaseViewBox = [0, -10, 514, 137]\n\n\n    PolyLines = []\n    Curves = []\n    SpPaths = []\n    Texts = []\n    Dots = []\n    ViewBox = this.BaseViewBox\n    NYRange = [2, 102]\n    NXRange = [52, 502]\n    Axes = [\n        {\n            points: [\n                [\n                    [this.NXRange[0], this.NYRange[0]],\n                    [this.NXRange[0], this.NYRange[1]],\n                    [this.NXRange[1], this.NYRange[1]],\n                    [this.NXRange[1], this.NYRange[0]],\n                    [this.NXRange[0], this.NYRange[0]]\n                ]\n            ],\n            attr: { stroke: \"black\", strokeWidth: 1 }\n        }\n    ]\n    LastInstances = {}\n\n    SelectRanges() {\n        var xrange = []\n        var yrange = []\n        var xrangeInProp = false\n        var yrangeInProp = false\n\n        if (this.props.xrange && this.props.xrange.length === 2) {\n            xrange = this.props.xrange\n            xrangeInProp = true\n        }\n        if (this.props.yrange && this.props.yrange.length === 2) {\n            yrange = this.props.yrange\n            yrangeInProp = true\n        }\n\n        var selectedPoints = this.props.series.map(ele => {\n            return Zip(ele.data).filter(e => {\n                return ((!xrangeInProp) || (e[0] >= xrange[0] && e[0] <= xrange[1]))\n                    && ((!yrangeInProp) || (e[1] >= yrange[0] && e[1] <= yrange[1]))\n            })\n        })\n\n        selectedPoints.forEach(ele => {\n            var xvals = ele.map(e => e[0])\n            var yvals = ele.map(e => e[1])\n\n            xvals.push(...xrange)\n            yvals.push(...yrange)\n            if (!xrangeInProp) xrange = [Math.floor(Math.min(...xvals)), Math.ceil(Math.max(...xvals))]\n            if (!yrangeInProp) yrange = [Math.floor(Math.min(...yvals)), Math.ceil(Math.max(...yvals))]\n        })\n\n        if (xrange[0] === xrange[1]) {\n            xrange = [xrange[0] - 1, xrange[1] + 1]\n        }\n\n        if (yrange[0] === yrange[1]) {\n            yrange = [yrange[0] - 1, yrange[1] + 1]\n        }\n\n        return [xrange, yrange]\n    }\n\n    SetupTicksAndGrids(xrange, yrange) {\n        this.SpPaths = this.Axes.slice()\n        // this.ViewBox = this.BaseViewBox.slice()\n\n        var yTickFunc = this.props.yTickFunc ? this.props.yTickFunc : e => { return e }\n        var xTickFunc = this.props.xTickFunc ? this.props.xTickFunc : e => { return e }\n        var tickClass = this.props.tickClass ? this.props.tickClass : \"\"\n        var xTickClass = this.props.xTickClass ? this.props.xTickClass : tickClass\n        var yTickClass = this.props.yTickClass ? this.props.yTickClass : tickClass\n\n        var xGridLines = []\n        var xTickLines = []\n        var xTexts = []\n        var yViewBox = [this.BaseViewBox[1], this.BaseViewBox[3]]\n        if (this.LastInstances.xrange && xrange[0] === this.LastInstances.xrange[0] && xrange[1] === this.LastInstances.xrange[1]) {\n            xGridLines = this.LastInstances.xGridLines\n            xTexts = this.LastInstances.xTexts\n            xTickLines = this.LastInstances.xTickLines\n            yViewBox = this.LastInstances.yViewBox\n        }\n        else {\n            // console.log(\"xrange === this.LastInstances.xrange\", xrange, this.LastInstances.xrange)\n            var xticks = SelectAxesTicks(xrange, 10)\n            var ystart = this.NYRange[1] + 4\n            var yend = this.NYRange[1]\n            xticks.forEach(x => {\n                var nx = (x - xrange[0]) * (this.NXRange[1] - this.NXRange[0]) / (xrange[1] - xrange[0]) + this.NXRange[0]\n                xTickLines.push([[nx, ystart], [nx, yend]])\n                xGridLines.push([[nx, yend], [nx, this.NYRange[0] - 2]])\n                xTexts.push({ attr: { x: nx, y: ystart + 14, textAnchor: \"middle\", className: xTickClass }, val: xTickFunc(x) })\n            })\n            if (this.props.xLabel) {\n                const [x, y] = [(this.NXRange[0] + this.NXRange[1]) / 2, ystart + 28]\n                xTexts.push({\n                    attr: {\n                        x: x,\n                        y: y,\n                        textAnchor: \"middle\",\n                        className: xTickClass,\n                    },\n                    val: this.props.xLabel\n                })\n                yViewBox[1] += 14\n            }\n            this.LastInstances.xrange = xrange\n            this.LastInstances.xGridLines = xGridLines\n            this.LastInstances.xTexts = xTexts\n            this.LastInstances.xTickLines = xTickLines\n            this.LastInstances.yViewBox = yViewBox\n        }\n\n        var yGridLines = []\n        var yTickLines = []\n        var yTexts = []\n        var xViewBox = [this.BaseViewBox[0], this.BaseViewBox[2]]\n        if (this.LastInstances.yrange && yrange[0] === this.LastInstances.yrange[0] && yrange[1] === this.LastInstances.yrange[1]) {\n            yGridLines = this.LastInstances.yGridLines\n            yTexts = this.LastInstances.yTexts\n            yTickLines = this.LastInstances.yTickLines\n            xViewBox = this.LastInstances.xViewBox\n        }\n        else {\n            // console.log(\"yrange === this.LastInstances.yrange\", yrange, this.LastInstances.yrange)\n            var yticks = SelectAxesTicks(yrange)\n            var xstart = this.NXRange[0] - 4\n            var xend = this.NXRange[0]\n            yticks.forEach(y => {\n                var ny = this.NYRange[1] - ((y - yrange[0]) * (this.NYRange[1] - this.NYRange[0]) / (yrange[1] - yrange[0])) //SVG y is reversed\n                if (ny < this.NYRange[0]) return\n                yTickLines.push([[xstart, ny], [xend, ny]])\n                yGridLines.push([[xend, ny], [this.NXRange[1] + 2, ny]])\n                yTexts.push({ attr: { x: xstart - 2, y: ny + 4, textAnchor: \"end\", className: yTickClass }, val: yTickFunc(y) })\n            })\n            if (this.props.yLabel) {\n                const [x, y] = [0, (this.NYRange[0] + this.NYRange[1]) / 2]\n                yTexts.push({\n                    attr: {\n                        x: x,\n                        y: y,\n                        textAnchor: \"middle\",\n                        className: yTickClass,\n                        transform: \"rotate(270, \" + x + \",\" + y + \")\"\n                    },\n                    val: this.props.yLabel\n                })\n                xViewBox[0] -= 10\n            }\n            this.LastInstances.yrange = yrange\n            this.LastInstances.yGridLines = yGridLines\n            this.LastInstances.yTexts = yTexts\n            this.LastInstances.yTickLines = yTickLines\n            this.LastInstances.xViewBox = xViewBox\n        }\n\n\n        this.SpPaths.push({ points: xTickLines.concat(yTickLines), attr: { stroke: \"black\", strokeWidth: 2 } })\n        this.SpPaths.push({ points: xGridLines.concat(yGridLines), attr: { stroke: \"gray\", strokeWidth: 1 } })\n        this.Texts = xTexts.concat(yTexts)\n        this.ViewBox = [xViewBox[0], yViewBox[0], xViewBox[1], yViewBox[1]]\n    }\n\n    PreparePlots() {\n        var ployLines = [] //this.Axes.slice()\n        var curves = []\n        var dots = []\n\n        var [xrange, yrange] = this.SelectRanges()\n        this.SetupTicksAndGrids(xrange, yrange)\n        // ployLines.push(...ticksGrid)\n\n        this.props.series.forEach((ele, i) => {\n            if (ele.length <= 1)\n                return\n            var points = Zip(ele.data)\n            var npoints = points.slice()\n\n            npoints = npoints.map(ele => {\n                var x = ele[0]\n                var y = ele[1]\n                var nx = (x - xrange[0]) * (this.NXRange[1] - this.NXRange[0]) / (xrange[1] - xrange[0]) + this.NXRange[0]\n                var ny = this.NYRange[1] - ((y - yrange[0]) * (this.NYRange[1] - this.NYRange[0]) / (yrange[1] - yrange[0])) //SVG y is reversed\n                return [nx, ny]\n            })\n            if (this.props.points) {\n                npoints.forEach(pt => {\n                    if (pt[0] < this.NXRange[0] || pt[0] > this.NXRange[1] || pt[1] < this.NYRange[0] || pt[1] > this.NYRange[1])\n                        return\n                    dots.push({\n                        attr: {\n                            cx: pt[0],\n                            cy: pt[1],\n                            r: 3,\n                            fill: \"white\",\n                            stroke: ele.color ? ele.color : \"#ff00ff\",\n                            strokeWidth: ele.strokeWidth ? ele.strokeWidth : \"2\",\n                        }\n                    })\n                })\n            }\n            if (this.props.spline) {\n                var [xs, ys] = Zip(npoints)\n                const spline = CreateInterpolant(xs, ys);\n                npoints = []\n                for (let i = this.NXRange[0]; i <= this.NXRange[1]; i += 5) {\n                    var y = spline(i)\n                    npoints.push([i, y])\n                }\n            }\n            curves.push({\n                points: npoints,\n                attr: {\n                    fill: \"none\",\n                    stroke: ele.color ? ele.color : \"#ff00ff\",\n                    strokeWidth: ele.strokeWidth ? ele.strokeWidth : \"2\",\n                },\n                curve: true,\n            })\n        })\n        this.PolyLines = ployLines\n        this.PolyLines.push(...curves)\n        this.Dots = dots\n        // this.Curves = curves\n    }\n\n\n    render() {\n        // console.log(\"plot key:\", this.props.key)\n        this.PreparePlots()\n        var clip = {\n            x: this.NXRange[0],\n            y: this.NYRange[0],\n            width: this.NXRange[1] - this.NXRange[0],\n            height: this.NYRange[1] - this.NYRange[0],\n        }\n        var lid = 0;\n        return (\n            <svg viewBox={this.ViewBox.join(\" \")}>\n                <clipPath id=\"shape\">\n                    <rect {...clip} />\n                </clipPath>\n                {\n                    this.SpPaths.map((pth, id) => {\n                        var points = []\n                        pth.points.forEach(path => {\n                            points.push([\"M\"])\n                            points.push(path[0].join(\" \"))\n                            points.push(\"L\")\n                            var cpt = path.slice(1).map(pt => {\n                                return pt.join(\" \")\n                            }).join(\", \")\n                            points.push(cpt)\n                        })\n                        lid += 1\n                        return (\n                            <path\n                                // clipPath=\"url(#shape)\"\n                                key={lid}\n                                {...pth.attr}\n                                fill=\"none\"\n                                // stroke={pth.color}\n                                // strokeWidth={pth.strokeWidth}\n                                d={points.join(\" \")}\n                            />\n                        )\n                    })\n                }\n                {\n\n                    this.Texts.map((txt, i) => {\n                        lid += 1\n                        return (\n                            <text key={lid} {...txt.attr}>\n                                {txt.val}\n                            </text>)\n                    })\n                }\n                {\n                    this.PolyLines.map((line, id) => {\n                        var cPathId = \"\"\n                        if (line.curve)\n                            cPathId = \"url(#shape)\"\n                        lid += 1\n                        return (\n                            <polyline\n                                clipPath={cPathId}\n                                key={lid}\n                                fill=\"none\"\n                                {...line.attr}\n                                // stroke={line.color}\n                                // strokeWidth={line.strokeWidth}\n                                points={line.points.map(p => { return p.join(\",\") }).join(\" \")}\n                            />\n                        )\n                    })\n                }\n                {\n                    this.Curves.map((crv, id) => {\n                        var points = [\"M\"]\n                        points.push(crv.points[0].join(\" \"))\n                        points.push(\"A\")\n                        var cpt = crv.points.slice(1).map(pt => {\n                            return pt.join(\" \")\n                        }).join(\", \")\n                        points.push(cpt)\n                        lid += 1\n                        return (\n                            <path\n                                clipPath=\"url(#shape)\"\n                                key={lid}\n                                fill=\"none\"\n                                {...crv.attr}\n                                // stroke={crv.color}\n                                // strokeWidth={crv.strokeWidth}\n                                d={points.join(\" \")}\n                            />\n                        )\n                    })\n                }\n                {\n                    this.Dots.map((crv, id) => {\n                        lid += 1\n                        return (\n                            <circle\n                                // clipPath=\"url(#shape)\"\n                                key={lid}\n                                {...crv.attr}\n                            />\n                        )\n                    })\n                }\n            </svg>\n        )\n    }\n\n}\n\nexport {\n    Plot\n}","import React, { Component } from 'react';\nimport { Plot } from \"./Plot.js\"\nimport { Zip, ToHumanReadableBytes, COLORS } from \"./Util.js\"\n// import Plot from 'react-plotly.js';\n// import Chart from \"react-apexcharts\";\n// import Math\n\n\n\n\n//=================================================\n\n\n\n\n\nclass Server extends Component {\n  FetchTimer = null;\n  IntervalExpiredFor = 0;\n  MaxDisplayTime = 100;\n  PlotData = { time: 0, thr: {}, bytes: {} };\n  ColorInputElements = {}\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      play: true,\n      plotDot: true,\n      pltData: { time: 0, thr: {}, bytes: {} },\n      ifcs: [],\n      checked: {},\n    }\n  }\n\n\n\n  componentDidMount() {\n    this.setState({\n      play: this.props.playAll ? this.props.playAll : false, //this.props.playAll,\n      plotDot: this.props.plotDot ? this.props.plotDot : false, // this.props.plotDot\n    })\n    this.FetchTimer = setInterval((e) => this.OnTick(e), 1000)\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.FetchTimer);\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    var tmpState = {}\n    var updated = false\n    if (this.props.playAll !== prevProps.playAll) {\n      tmpState.play = this.props.playAll\n      updated = true\n    }\n    if (this.props.plotDot !== prevProps.plotDot) {\n      tmpState.plotDot = this.props.plotDot\n      updated = true\n    }\n    if (updated) {\n      this.setState(tmpState)\n    }\n  }\n\n  OnTick(e) {\n    if (!this.state.play)\n      return\n    this.IntervalExpiredFor += 1;\n\n    fetch(this.props.server + \"?\" + this.IntervalExpiredFor)\n      .then(r => r.json())\n      .then(r => {\n        // console.log(r)\n        this.RecvData(r)\n      })\n    return null\n  }\n\n\n  RecvData(res) {\n    var lastTime = this.PlotData.time\n    var curTime = res['time']\n    if (curTime < lastTime)\n      return\n    var lastBytes = { ...this.PlotData.bytes }\n    var curBytes = {}\n    var curThr = {}\n    for (var ifc in res[\"ifcs\"]) {\n      curBytes[ifc] = [res[\"ifcs\"][ifc]['rx_bytes'], res[\"ifcs\"][ifc]['tx_bytes']]\n\n      var rxThr = 0;\n      var txThr = 0\n      if ((curTime - lastTime) <= this.MaxDisplayTime && lastBytes[ifc] != null) {\n        rxThr = (curBytes[ifc][0] - lastBytes[ifc][0]) * 8 / (curTime - lastTime)\n        txThr = (curBytes[ifc][1] - lastBytes[ifc][1]) * 8 / (curTime - lastTime)\n      }\n      curThr[ifc] = [rxThr, txThr, curTime]\n    }\n    var newThr = {}\n    // var curTimes = this.PlotData.times.filter(e => { return (curTime - e) <= this.MaxDisplayTime })\n    // var discard = this.PlotData.times.length - curTimes.length\n    for (ifc in curThr) {\n      var datas = []\n      if (this.PlotData.thr[ifc]) {\n        datas = this.PlotData.thr[ifc].filter(e => { return (curTime - e[2]) <= this.MaxDisplayTime })\n      }\n\n      // if (curTimes.length !== datas.length) console.error(\"Lenght not matching\")\n      datas.push(curThr[ifc])\n      newThr[ifc] = datas\n    }\n    // curTimes.push(curTime)\n    var ifcs = Object.keys(newThr)\n    var checked = { ...this.state.checked }\n    ifcs.forEach((ifc, i) => {\n      if (!(ifc in this.props.colors)) {\n        var nextColor = COLORS[i % COLORS.length]\n        this.props.onColorUpdate(ifc, nextColor)\n      }\n      if (!(ifc in this.state.checked)) {\n        checked[ifc] = true\n      }\n    })\n\n    this.PlotData = { thr: newThr, bytes: curBytes, time: curTime }\n    this.setState({ pltData: this.PlotData, ifcs: ifcs, checked: checked })\n  }\n\n  //==========\n  OnToggleChecked(ifc) {\n    // console.log(e.target())\n    var checked = { ...this.state.checked }\n    checked[ifc] = this.state.checked[ifc] ? false : true\n    this.setState({ checked: checked })\n  }\n\n  OnColorClicked(ifc) {\n    if (this.ColorInputElements[ifc]) {\n      this.ColorInputElements[ifc].click()\n    }\n  }\n\n  ContainerCss = {\n    margin: \"5px\",\n    border: \"2px solid black\",\n    padding: \"5px\",\n    float: \"left\"\n  }\n  BlockViewCss = {\n    display: \"block\",\n    float: \"left\"\n  }\n  LegendBoxCss = {\n    width: \"40px\",\n    height: \"20px\"\n  }\n  IfcContCss = {\n    marginLeft: \"20px\",\n    display: \"inline-block\"\n  }\n  RxTxBytesHolderCss = {\n    marginLeft: \"20px\",\n    fontFamily: \"'Courier New', Courier, monospace\"\n  }\n\n  RenderPlot() {\n    var rxData = []\n    var txData = []\n    var curTime = this.state.pltData.time\n    var xrangeMin = this.props.xrangeMin ? 0 - this.props.xrangeMin : -10;\n    var plotDot = this.state.plotDot; //this.props.plotDot ? this.props.plotDot : false;\n    // var times = this.state.pltData.times.map(e => { return e - curTime })\n    this.state.ifcs.forEach(ifc => {\n      var color = this.props.colors[ifc]\n      if (!(ifc in this.state.checked) || !this.state.checked[ifc]) {\n        return\n      }\n      var xrangeMinTime = curTime + xrangeMin - 2\n      var usableDt = this.state.pltData.thr[ifc].filter(e=>{return e[2] > xrangeMinTime})\n      var td = Zip(usableDt)\n      var rx = td[0]\n      var tx = td[1]\n      var tm = td[2].map(e => { return e - curTime })\n      // console.log(rx, tx)\n      rxData.push({\n        data: [tm, rx],\n        color: color,\n      })\n      txData.push({\n        data: [tm, tx],\n        color: color,\n      })\n    })\n    return (\n      <div>\n        <Plot\n          series={txData}\n          width=\"500\"\n          height=\"200\"\n          xrange={[xrangeMin, 0]}\n          points={plotDot}\n          yTickFunc={e => ToHumanReadableBytes(e, 1)}\n          xTickFunc={e => { return \"\" }}\n          tickClass=\"plotTicks\"\n          yLabel=\"TX\"\n          spline={this.props.spline}\n        />\n        <Plot\n          series={rxData}\n          width=\"500\"\n          height=\"200\"\n          xrange={[xrangeMin, 0]}\n          points={plotDot}\n          yTickFunc={e => ToHumanReadableBytes(e, 1)}\n          tickClass=\"plotTicks\"\n          // xLabel=\"Time\"\n          yLabel=\"RX\"\n          spline={this.props.spline}\n        />\n      </div>\n    )\n  }\n\n  RenderIfc(ifc, id) {\n    var color = this.props.colors[ifc]\n    return (\n      <div style={this.BlockViewCss} key={id}>\n        <div style={this.IfcContCss}>\n          <input type=\"checkbox\" style={{ float: \"left\" }} checked={this.state.checked[ifc] ? \"checked\" : \"\"} readOnly onClick={e => this.OnToggleChecked(ifc)} />\n          <div style={this.BlockViewCss}>{ifc}:</div>\n          <div\n            onClick={e => this.OnColorClicked(ifc)}\n            style={{ ...this.LegendBoxCss, ...this.BlockViewCss, background: color + \" none repeat scroll 0% 0%\", marginLeft: \"20px\" }}\n          >\n            <input\n              type=\"color\"\n              onChange={(e) => { this.props.onColorUpdate(ifc, e.currentTarget.value) }}\n              ref={input => this.ColorInputElements[ifc] = input}\n              style={{ visibility: \"hidden\" }}\n              data-clr-query=\"server1591503971937\"\n              data-clr-ifc=\"wlp7s0\"\n              value={color}\n            />\n          </div>\n        </div>\n        <div style={this.RxTxBytesHolderCss}>\n          <b>↑</b>TX:<span style={{ color: color }}>{ToHumanReadableBytes(this.PlotData.bytes[ifc][1])+\"B\"}</span>\n        </div>\n        <div style={this.RxTxBytesHolderCss}>\n          <b>↓</b>RX:<span style={{ color: color }}>{ToHumanReadableBytes(this.PlotData.bytes[ifc][0])+\"B\"}</span>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n\n    var playBtnVal = this.state.play ? (<>&#9646;&#9646;</>) : (<>&#9654;</>)\n    return (\n      <div style={this.ContainerCss}>\n        <span style={{ float: \"left\", cursor: \"pointer\", color: \"green\" }} onClick={(e) => { if (this.props.onInfoClick) this.props.onInfoClick() }}>🛈</span>\n        <span style={{ float: \"left\", cursor: \"pointer\", padding: \"0 5px\" }} onClick={(e) => this.setState({ play: !this.state.play })}>{playBtnVal}</span>\n        <span style={{ float: \"left\", cursor: \"pointer\", padding: \"0 5px\" }} onClick={(e) => this.setState({ plotDot: !this.state.plotDot })}>&#x25EF;</span>\n        <span style={{ float: \"right\", cursor: \"pointer\", color: \"red\" }} onClick={e => { if (this.props.onClose) this.props.onClose() }}>✖</span>\n        <center>\n          <h2 style={{ margin: \"0\" }}>{this.props.name}</h2>\n        </center>\n        <table style={{ width: (this.props.width ? this.props.width : 500) + \"px\" }}>\n          <tbody>\n            <tr>\n              <td style={{verticalAlign: \"middle\", width: \"20px\", writingMode: \"vertical-lr\", transform: \"rotate(180deg)\"}}>Speed (bps)</td>\n              <td>\n                {this.RenderPlot()}\n              </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td style={{textAlign: \"center\", verticalAlign: \"top\", padding:\"0 0 10px 0\"}}>\n                Time (sec)\n              </td>\n            </tr>\n            <tr>\n              <td colSpan={2}>\n                {this.state.ifcs.map((ifc, id) => this.RenderIfc(ifc, id))}\n                <br/>\n                &nbsp;\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\nServer.defaultProps = {\n  displayTime: 10,\n  playAll: true,\n  plotDot: false\n}\n\n\nexport {\n  Server\n};\n","import React, { Component } from 'react';\nclass Modal extends Component {\n  RenderCloseButton() {\n    if (this.props.closeButton)\n      return <span className=\"modal-basic-close\" onClick={this.props.onClose}>&times;</span>\n  }\n\n  shouldComponentUpdate() {\n    return false\n  }\n\n  render() {\n    // console.log(this.props.children)\n    if (this.props.open) {\n      return (\n        <div className=\"modal-basic\">\n          <div className=\"modal-basic-content\">\n            {this.RenderCloseButton()}\n            {this.props.children}\n          </div>\n        </div>\n      )\n    }\n    return (<></>)\n  }\n}\n\nModal.defaultProps = {\n  closeButton: true,\n  open: true\n}\n\n\nfunction ConfirmModal(props) {\n  return (\n    <Modal open={true} onClose={(e) => props.onClose(e)}>\n      <table width=\"100%\">\n        <tbody>\n          <tr><td colspan=\"2\">{props.children}</td></tr>\n          <tr>\n            <td align=\"right\" width=\"50%\">\n              <button\n                name=\"No\"\n                style={{ backgroundColor: \"green\" }}\n                onClick={e => props.onNo(e)}>No</button>\n            </td>\n            <td align=\"left\">\n              <button\n                name=\"Yes\"\n                style={{ backgroundColor: \"red\", }}\n                onClick={e => props.onYes(e)}>Yes</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </Modal>\n  )\n}\n\nfunction ModalFormInput(props) {\n  return (\n    <tr>\n      <td align=\"right\" width=\"50%\">{props.label}</td>\n      <td align=\"left\"><input defaultValue={props.defaultValue} name={props.name} type={props.type ? props.type : \"text\"} /></td>\n    </tr>\n  )\n}\n\nfunction ModalForm(props) {\n  return (\n    <Modal open={true} onClose={(e) => props.onClose(e)}>\n      <form onSubmit={(e) => props.onSubmit(e)}>\n        <table width=\"100%\">\n          <tbody>\n            {props.children}\n            <tr>\n              <td colSpan=\"2\" align=\"center\"><input className=\"button\" type=\"submit\" value=\"Submit\" /></td>\n            </tr>\n          </tbody>\n        </table>\n      </form>\n    </Modal>\n  )\n}\n\n\nexport {\n  Modal,\n  ConfirmModal,\n  ModalForm,\n  ModalFormInput\n}","import React, { Component } from 'react';\nimport { Server } from \"./Components.js\";\nimport { ConfirmModal, ModalForm, ModalFormInput } from \"./Modal.js\"\n\nclass App extends Component {\n    ImportElement = null\n\n    constructor(props) {\n        super(props);\n        this.Widths = [200, 500, 900]\n        this.state = {\n            addNewServerModal: false,\n            playAll: true,\n            xrangeMin: 10,\n            editServerIndexModal: -1,\n            deleteServerIndexModal: -1,\n            importConfigModal: false,\n            removeAllServersModal: false,\n            spline: false,\n            width: this.Widths[1],\n            serverStates: this.restoreServerStateFromLocalStorage(),\n        }\n    }\n\n    addServer(server, name, id) {\n        var curServer = {\n            id: id,\n            name: name,\n            server: server,\n            colors: {} //per ifc diff color\n        }\n\n        this.setState({\n            serverStates: [...this.state.serverStates, curServer]\n        })\n    }\n\n    updateServer(server, name, id) {\n        var curServer = {\n            id: id,\n            name: name,\n            server: server,\n            colors: {} //per ifc diff color\n        }\n        this.setState({\n            serverStates: this.state.serverStates.map((s, i) => {\n                return id === i ? curServer : s;\n            })\n        })\n    }\n\n    restoreServerStateFromLocalStorage() { //should run only during constructor\n        if (typeof (Storage) !== \"undefined\") {\n            if (localStorage.serverStates) {\n                return JSON.parse(localStorage.serverStates)\n            }\n        }\n        return []\n    }\n\n    storeServerStateToLocalStorage() { //should run only during constructor\n        if (typeof (Storage) !== \"undefined\") {\n            localStorage.serverStates = JSON.stringify(this.state.serverStates)\n        }\n    }\n\n    componentDidUpdate(_, prevState) {\n        if (this.state.serverStates !== prevState.serverStates) {\n            this.storeServerStateToLocalStorage()\n            // console.log(\"componentDidUpdate\", this.state.serverStates === prevState.serverStates, this.state, prevState)\n        }\n    }\n    //=======================================================\n    //Handlers\n    //=======================================================\n\n    handleLoadConfig(event) {\n        var input = event.target\n        var reader = new FileReader();\n        reader.onload = () => {\n\n            var text = reader.result;\n            var jsonData = JSON.parse(text)\n            this.setState({ serverStates: jsonData, importConfigModal: false })\n            // location.reload()\n        };\n        reader.readAsText(input.files[0]);\n    }\n\n    handleNewServerSubmitted(e) {\n        e.preventDefault()\n        var frmData = new FormData(e.target);\n        var server = frmData.get(\"addr\")\n        var name = frmData.get(\"name\")\n        if (server === \"\" || server === null || name === \"\" || name === null) {\n            alert(\"invalid input\")\n            return\n        }\n        if (!server.startsWith(\"https://\") && !server.startsWith(\"http://\")) {\n            server = \"http://\" + server\n        }\n        var date = new Date()\n        var id = date.getTime()\n        this.addServer(server, name, id)\n        // add2Storage(server, name, id)\n        this.setState({ addNewServerModal: false })\n    }\n\n    handleEditServerSubmitted(e) {\n        e.preventDefault()\n        var frmData = new FormData(e.target);\n        var server = frmData.get(\"addr\")\n        var name = frmData.get(\"name\")\n        if (server === \"\" || server === null || name === \"\" || name === null) {\n            alert(\"invalid input\")\n            return\n        }\n        if (!server.startsWith(\"https://\") && !server.startsWith(\"http://\")) {\n            server = \"http://\" + server\n        }\n        var id = this.state.editServerIndexModal\n        this.updateServer(server, name, id)\n        // add2Storage(server, name, id)\n        this.setState({ editServerIndexModal: -1 })\n    }\n\n    handleUpdateColor(index, ifc, color) {\n        // console.log(index, ifc, color)\n        var serverStates = this.state.serverStates.map((s, i) => {\n            if (index === i) {\n                s.colors[ifc] = color\n            }\n            // colors = {...s.colors}\n            return s\n        })\n        this.setState({ serverStates: serverStates })\n    }\n\n    //=======================================================\n    //Renders\n    //=======================================================\n\n    renderNewServerModal() {\n        // console.log(\"Rendering modal\")\n\n        if (this.state.addNewServerModal) {\n            return (\n                <ModalForm\n                    onClose={e => this.setState({ addNewServerModal: false })}\n                    onSubmit={e => this.handleNewServerSubmitted(e)}\n                >\n                    <ModalFormInput label=\"Name:\" name=\"name\" />\n                    <ModalFormInput label=\"Address:\" name=\"addr\" />\n                </ModalForm>\n            )\n        }\n    }\n\n    renderServerInfoModal() {\n        // console.log(\"Rendering modal\")\n        if (this.state.editServerIndexModal > -1 && this.state.editServerIndexModal < this.state.serverStates.length) {\n            var curServer = this.state.serverStates[this.state.editServerIndexModal]\n            return (\n                <ModalForm\n                    onClose={e => this.setState({ editServerIndexModal: -1 })}\n                    onSubmit={e => this.handleEditServerSubmitted(e)}\n                >\n                    <ModalFormInput label=\"Name:\" name=\"name\" defaultValue={curServer.name} />\n                    <ModalFormInput label=\"Address:\" name=\"addr\" defaultValue={curServer.server} />\n                </ModalForm>\n            )\n        }\n    }\n\n    renderConfigLoadModal() {\n        if (this.state.importConfigModal) {\n            return (\n                <ConfirmModal\n                    onClose={(e) => this.setState({ importConfigModal: false })}\n                    onYes={e => { if (this.ImportElement) this.ImportElement.click() }}\n                    onNo={e => { this.setState({ importConfigModal: false }) }}\n                >\n                    Are you sure? This action will wipe current layout and load the stored one.\n                </ConfirmModal>\n            )\n        }\n    }\n\n    renderDeleteServerModal() {\n        if (this.state.deleteServerIndexModal >= 0 && this.state.deleteServerIndexModal < this.state.serverStates.length) {\n            return (\n                <ConfirmModal\n                    onClose={(e) => this.setState({ deleteServerIndexModal: -1 })}\n                    onYes={e => { this.setState({ deleteServerIndexModal: -1, serverStates: this.state.serverStates.filter((e, i) => { return i !== this.state.deleteServerIndexModal }) }) }}\n                    onNo={e => { this.setState({ deleteServerIndexModal: -1 }) }}\n                >\n                    Are you sure? This action will wipe current layout and load the stored one.\n                </ConfirmModal>\n            )\n        }\n    }\n\n    renderRemoveAllServerModal() {\n        if (this.state.removeAllServersModal) {\n            return (\n                <ConfirmModal\n                    onClose={(e) => this.setState({ v: false })}\n                    onYes={e => { this.setState({ serverStates: [], removeAllServersModal: false }) }}\n                    onNo={e => { this.setState({ removeAllServersModal: false }) }}\n                >\n                    Are you sure? This action will wipe current layout and load the stored one.\n                </ConfirmModal>\n            )\n        }\n    }\n\n    renderServer(s, id) {\n        return (<Server\n            xrangeMin={this.state.xrangeMin}\n            key={\"server:\" + id}\n            playAll={this.state.playAll}\n            plotDot={this.state.plotDot}\n            {...s}\n            spline={this.state.spline}\n            onColorUpdate={(ifc, c) => { this.handleUpdateColor(id, ifc, c) }}\n            onInfoClick={() => this.setState({ editServerIndexModal: id })}\n            onClose={() => { this.setState({ deleteServerIndexModal: id }) }}\n            width={this.state.width}\n        />)\n    }\n\n    render() {\n        // console.log(\"Rendering\")\n        var playBtnVal = this.state.playAll ? (<>&#9646;&#9646;</>) : (<>&#9654;</>)\n        var splineBtnVal = this.state.spline ? (<>&#x223c;</>) : (<>&#x1a13;</>)\n        var magChar = (<span role=\"img\" aria-label=\"save\">&#x1F50D;</span>)\n        return (\n            <>\n                {this.renderNewServerModal()}\n                {this.renderServerInfoModal()}\n                {this.renderConfigLoadModal()}\n                {this.renderDeleteServerModal()}\n                {this.renderRemoveAllServerModal()}\n                <div>\n                    <div className=\"controlBarLeft\">\n                        <button title=\"Add a new server\" onClick={(e) => this.setState({ addNewServerModal: true })}>&#x2605;</button>\n                        <button title=\"Toggle play/pause\" onClick={(e) => this.setState({ playAll: !this.state.playAll })}>{playBtnVal}</button>\n                        <button title=\"Toggle dot in plot\" onClick={(e) => this.setState({ plotDot: !this.state.plotDot })}>&#x25EF;</button>\n                        <button title=\"Toggle dot in spline\" onClick={(e) => this.setState({ spline: !this.state.spline })}>{splineBtnVal}</button>\n\n                        <button title=\"Zoom-out\" onClick={(e) => this.setState({ width: this.state.width - 10 })} disabled={this.state.width <= this.Widths[0]}>{magChar}-</button>\n                        <button title=\"neutral\" onClick={(e) => this.setState({ width: this.Widths[1] })} disabled={this.state.width === this.Widths[1]}>{magChar}</button>\n                        <button title=\"Zoom-in\" onClick={(e) => this.setState({ width: this.state.width + 10 })} disabled={this.state.width >= this.Widths[2]}>{magChar}+</button>\n                        \n                        <select onChange={(e) => { var tr = e.target; this.setState({ xrangeMin: tr.options[tr.selectedIndex].value }) }}>\n                            <option value=\"10\">10 Sec</option>\n                            <option value=\"20\">20 Sec</option>\n                            <option value=\"30\">30 Sec</option>\n                            <option value=\"40\">40 Sec</option >\n                            <option value=\"50\">50 Sec</option >\n                        </select >\n                        {/* =========== */}\n                        {/* Close all button */}\n                        {/* =========== */}\n                        <button title=\"Remove all servers\" onClick={(e) => this.setState({ removeAllServersModal: true })} style={{color: \"red\"}}>&#x2716;</button>\n                    </div >\n                    <div className=\"controlBarRight\">\n                        <a download=\"config.json\" href={\"data:json/application;charset=utf-8,\" + encodeURIComponent(JSON.stringify(this.state.serverStates))}>\n                            <button title=\"Export current config\">\n                                <span role=\"img\" aria-label=\"save\">&#x1F4BE;</span>\n                            </button>\n                        </a>\n                        <button title=\"Import previously stored config\" onClick={e => { this.setState({ importConfigModal: true }) }}>\n                            <span role=\"img\" aria-label=\"save\">&#x1f4c2;</span>\n                        </button>\n                    </div>\n\n                    \n                    <div style={{ clear: \"both\" }}></div>\n                </div>\n                {/* <div className=\"clear\">\n                </div> */}\n                <div id=\"demotitle\" ><center><h1 style={{ margin: 0 }}>Remote Network Activity Monitor</h1></center></div>\n                <div className=\"servers\">\n                    {this.state.serverStates.map((a, b, c) => { return this.renderServer(a, b, c); })}\n                </div>\n                <input ref={e => this.ImportElement = e} type=\"file\" accept=\"application/json\" onChange={e => { this.handleLoadConfig(e) }} style={{ display: \"none\" }} />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import $ from \"jquery\"\n// import Flot from 'flot';\n\n\n\n\n// ========================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}